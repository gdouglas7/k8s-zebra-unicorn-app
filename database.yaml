apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - image: redis:3.2
        name: redis

---
apiVersion: apps/v1
kind:  StatefulSet # with this type is possible to replicate data between replicas using structure like main/secundary and CQRS
metadata:
  labels:
    app: postgres
  name: postgres
spec:
  replicas: 2
  serviceName: "postgres"
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - image: postgres:9.4
        name: postgres
        envFrom:
        - configMapRef:
            name: postgres
        - secretRef:
            name: postgres
        volumeMounts:
          - name: postgres-pvc
            mountPath: /data
      volumes:
        - name: postgres-pvc
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim ## ideally the volume has to be Remote. When type kubectl delete for the Statefulset/Deployment, the volume will be deleted
metadata:
  name: postgres-pvc
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolume ## this type must be managed by K8s Admin
metadata:
  name: postgres-pv
  labels:
    app: postgres-pv
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: "/mnt/data"





